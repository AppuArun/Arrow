node{
    def buildNum = BUILD_NUMBER
    stage("Git CheckOut"){
        git url: 'https://github.com/MithunTechnologiesDevOps/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage("Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.8.3", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    } 
    
    stage("Build Docker Image") {
         sh "docker build -t 3.108.121.244:8083/spring-boot-mongo:${buildNum} ."
    }
    
    stage("Docker Push"){
        withCredentials([string(credentialsId: 'Private_Repo_Password', variable: 'Private_Repo_Password')]) {
          sh "docker login -u admin -p ${Private_Repo_Password} 3.108.121.244:8083"
        }
        sh "docker push 3.108.121.244:8083/spring-boot-mongo:${buildNum}"
        
    }   
    
    //Remove local image from JenkinsServer after pushing to private docker repo.
    stage("Remove Local Image"){
        sh "docker rmi -f 3.108.121.244:8083/spring-boot-mongo:${buildNum}"
    }
    
    stage("Deploy to DockerSwarm cluster"){
        sshagent(['Docker_Swarm_Manager_Dev']) {
	   withCredentials([string(credentialsId: 'Private_Repo_Password', variable: 'Private_Repo_Password')]) {
	    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.47.232 docker login -u admin -p ${Private_Repo_Password} 3.108.121.244:8083"
           }	    
           //Usage of --with-registry-auth is needed as authentication is done only for MasterMachine	   
	   sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.47.232 docker service rm arrowspringapp || true'
           sh "ssh -o ubuntu@172.31.47.232 docker service create --name arrowspringapp -p 7070:8080 --replicas 2 --with-registry-auth 3.108.121.244:8083/spring-boot-mongo:${buildNum}"
	   
        }
    }
}
