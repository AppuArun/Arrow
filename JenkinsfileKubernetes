node{
    def buildNum = BUILD_NUMBER
    stage("Git Clone"){
        git url: 'https://github.com/arunnsm/Arrow.git',branch: 'master'
    }
    
    stage("Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.8.3", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    } 
    
    stage("Build Docker Image") {
         sh "docker build -t 3.108.121.244:8083/spring-boot-mongo:${buildNum} ."
    }
    
    
    stage("Upload Image to Nexus"){
        withCredentials([string(credentialsId: 'Nexus_PrivateRepo_Pwd', variable: 'Nexus_PrivateRepo_Pwd')]) {
          sh "docker login -u admin -p ${Nexus_PrivateRepo_Pwd} 3.108.121.244:8083"
}
        sh "docker push 3.108.121.244:8083/spring-boot-mongo:${buildNum}"
        
    }   
    
    //Remove local image from JenkinsServer after pushing to private docker repo.
    stage("Remove Local Image"){
        sh "docker rmi -f 3.108.121.244:8083/spring-boot-mongo:${buildNum}"
    }
    
    stage("Deploy to EKS Cluster"){
        withCredentials([string(credentialsId: 'dockerrepossecret', variable: 'dockerrepossecret')])
        withKubeConfig(credentialsId: 'KubeConfig') {
        sh 'kubectl apply -f springBootMongo-PrivateRepo.yml'
        }
    }
}    
